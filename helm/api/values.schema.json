{
  "$schema": "https://json-schema.org/draft-07/schema#",
  "properties": {
    "include": {
      "description": "Deploy the API component.",
      "type": "boolean"
    },
    "expose": {
      "description": "Expose the API component via Contour. Set to false if you want to expose the API using other means.",
      "type": "boolean"
    },
    "replicas": {
      "description": "Number of replicas.",
      "type": "integer"
    },
    "resources": {
      "description": "[`ResourceRequirements`](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#resourcerequirements-v1-core) for the API.",
      "type": "object",
      "properties": {
        "requests": {
          "description": "Resource requests.",
          "type": "object",
          "properties": {
            "cpu": {
              "description": "CPU request.",
              "type": "string"
            },
            "memory": {
              "description": "Memory request.",
              "type": "string"
            }
          }
        },
        "limits": {
          "description": "Resource limits.",
          "type": "object",
          "properties": {
            "cpu": {
              "description": "CPU limit.",
              "type": "string"
            },
            "memory": {
              "description": "Memory limit.",
              "type": "string"
            }
          }
        }
      }
    },
    "apiServer": {
      "type": "object",
      "properties": {
        "url": {
          "description": "API URL.",
          "type": "string"
        },
        "port": {
          "description": "API external port. Defaults to `443`.",
          "type": "integer"
        },
        "internalPort": {
          "description": "Port used internally by the API container.",
          "type": "integer"
        },
        "timeouts": {
          "type": "object",
          "description": "HTTP timeouts.",
          "properties": {
            "read": {
              "description": "Read timeout.",
              "type": "integer"
            },
            "write": {
              "description": "Write timeout.",
              "type": "integer"
            },
            "idle": {
              "description": "Idle timeout.",
              "type": "integer"
            },
            "readHeader": {
              "description": "Read header timeout.",
              "type": "integer"
            }
          },
          "required": ["read", "write", "idle", "readHeader"]
        }
      },
      "required": ["url", "port", "internalPort", "timeouts"]
    },
    "image": {
      "description": "Reference to the API container image.",
      "type": "string"
    },
    "lifecycle": {
      "type": "object",
      "description": "Default lifecycle for apps.",
      "properties": {
        "type": {
          "description": "Lifecycle type (only `buildpack` accepted currently).",
          "type": "string",
          "enum": ["buildpack"]
        },
        "stack": {
          "description": "Stack.",
          "type": "string"
        },
        "stagingRequirements": {
          "type": "object",
          "properties": {
            "memoryMB": {
              "description": "Memory in MB for staging.",
              "type": "integer"
            },
            "diskMB": {
              "description": "Disk in MB for staging.",
              "type": "integer"
            }
          },
          "required": ["memoryMB", "diskMB"]
        }
      },
      "required": ["type", "stack", "stagingRequirements"]
    },
    "builderName": {
      "description": "ID of the builder used to build apps. Defaults to `kpack-image-builder`.",
      "type": "string"
    },
    "userCertificateExpirationWarningDuration": {
      "description": "Issue a warning if the user certificate provided for login has a long expiry. See [`time.ParseDuration`](https://pkg.go.dev/time#ParseDuration) for details on the format.",
      "type": "string"
    },
    "authProxy": {
      "type": "object",
      "description": "Needed if using a cluster authentication proxy, e.g. [Pinniped](https://pinniped.dev/).",
      "properties": {
        "host": {
          "description": "Must be a host string, a host:port pair, or a URL to the base of the apiserver.",
          "type": "string"
        },
        "caCert": {
          "description": "Proxy's PEM-encoded CA certificate (*not* as Base64).",
          "type": "string"
        }
      }
    }
  },
  "required": [
    "include",
    "expose",
    "apiServer",
    "image",
    "lifecycle",
    "builderName",
    "userCertificateExpirationWarningDuration"
  ],
  "title": "Values",
  "type": "object"
}
